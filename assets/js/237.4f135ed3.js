(window.webpackJsonp=window.webpackJsonp||[]).push([[237],{439:function(r,a,t){"use strict";t.r(a);var e=t(0),s=Object(e.a)({},function(){var r=this,a=r.$createElement,t=r._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"spring-cloud-与-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-与-docker","aria-hidden":"true"}},[r._v("#")]),r._v(" Spring Cloud 与 Docker")]),r._v(" "),t("h2",{attrs:{id:"书评"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#书评","aria-hidden":"true"}},[r._v("#")]),r._v(" 书评")]),r._v(" "),t("p",[r._v("第一遍看下来，主要介绍了 Spring Cloud 官方的五大组件：服务注册发现的 Eureka、负载均衡的 Ribbon、Feign、Hystrix、Zuul 等大名鼎鼎的 Netflix 开源项目。像是一个 Netflix 吹，成书当时的大环境的确如此。近年来，随着 Spring Cloud Alibaba 的孵化完成，局势有所改观，在关注 SCN 的同时，也要关注 SCA！")]),r._v(" "),t("h2",{attrs:{id:"第-1-章-微服务架构概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-1-章-微服务架构概述","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 1 章 微服务架构概述")]),r._v(" "),t("ul",[t("li",[r._v("Martin Fowler《微服务》原文："),t("a",{attrs:{href:"https://martinfowler.com/articles/microservices.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("https://martinfowler.com/articles/microservices.html"),t("OutboundLink")],1)]),r._v(" "),t("li",[r._v("译文："),t("a",{attrs:{href:"http://blog.cuicc.com/blog/2015/07/22/microservices/",target:"_blank",rel:"noopener noreferrer"}},[r._v("http://blog.cuicc.com/blog/2015/07/22/microservices/"),t("OutboundLink")],1)])]),r._v(" "),t("h2",{attrs:{id:"第-2-章-微服务开发框架——spring-cloud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-2-章-微服务开发框架——spring-cloud","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 2 章 微服务开发框架——Spring Cloud")]),r._v(" "),t("h2",{attrs:{id:"第-3-章-开始使用-spring-cloud-实战微服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-3-章-开始使用-spring-cloud-实战微服务","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 3 章 开始使用 Spring Cloud 实战微服务")]),r._v(" "),t("h2",{attrs:{id:"第-4-章-微服务注册与发现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-4-章-微服务注册与发现","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 4 章 微服务注册与发现")]),r._v(" "),t("h2",{attrs:{id:"第-5-章-使用-ribbon-实现客户端侧负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-5-章-使用-ribbon-实现客户端侧负载均衡","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 5 章 使用 Ribbon 实现客户端侧负载均衡")]),r._v(" "),t("h2",{attrs:{id:"第-6-章-使用-feign-实现生命式-rest-调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-6-章-使用-feign-实现生命式-rest-调用","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 6 章 使用 Feign 实现生命式 REST 调用")]),r._v(" "),t("h2",{attrs:{id:"第-7-章-使用-hystrix-实现微服务的容错处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-7-章-使用-hystrix-实现微服务的容错处理","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 7 章 使用 Hystrix 实现微服务的容错处理")]),r._v(" "),t("h2",{attrs:{id:"第-8-章-使用-zuul-构建微服务网关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-8-章-使用-zuul-构建微服务网关","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 8 章 使用 Zuul 构建微服务网关")]),r._v(" "),t("h2",{attrs:{id:"第-9-章-使用-spring-cloud-config-统一管理微服务配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-9-章-使用-spring-cloud-config-统一管理微服务配置","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 9 章 使用 Spring Cloud Config 统一管理微服务配置")]),r._v(" "),t("h2",{attrs:{id:"第-10-章-使用-spring-cloud-sleuth-实现微服务跟踪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-10-章-使用-spring-cloud-sleuth-实现微服务跟踪","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 10 章 使用 Spring Cloud Sleuth 实现微服务跟踪")]),r._v(" "),t("h2",{attrs:{id:"第-11-章-ddocker-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-11-章-ddocker-入门","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 11 章 Ddocker 入门")]),r._v(" "),t("h2",{attrs:{id:"第-12-章-将微服务运行在-docker-上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-12-章-将微服务运行在-docker-上","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 12 章 将微服务运行在 Docker 上")]),r._v(" "),t("h2",{attrs:{id:"第-13-章-使用-docker-compose-编排微服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第-13-章-使用-docker-compose-编排微服务","aria-hidden":"true"}},[r._v("#")]),r._v(" 第 13 章 使用 Docker Compose 编排微服务")]),r._v(" "),t("hr"),r._v(" "),t("h2",{attrs:{id:"faqs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#faqs","aria-hidden":"true"}},[r._v("#")]),r._v(" FAQs")]),r._v(" "),t("h3",{attrs:{id:"_1-啥是-spring-cloud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-啥是-spring-cloud","aria-hidden":"true"}},[r._v("#")]),r._v(" 1. 啥是 Spring Cloud")]),r._v(" "),t("p",[r._v("答：Spring Cloud 是在 Spring Boot 基础上构建的，用于快速构建分布式系统的通用模式的工具集。")]),r._v(" "),t("p",[r._v("附对应版本: "),t("a",{attrs:{href:"https://spring.io/projects/spring-cloud/",target:"_blank",rel:"noopener noreferrer"}},[r._v("https://spring.io/projects/spring-cloud/"),t("OutboundLink")],1)]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("Release Train")]),r._v(" "),t("th",[r._v("Boot Version")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[r._v("Hoxton（霍克顿）")]),r._v(" "),t("td",[r._v("2.2.x")])]),r._v(" "),t("tr",[t("td",[r._v("Greenwich（格林尼治）")]),r._v(" "),t("td",[r._v("2.1.x")])]),r._v(" "),t("tr",[t("td",[r._v("Finchley（芬奇利）")]),r._v(" "),t("td",[r._v("2.0.x")])]),r._v(" "),t("tr",[t("td",[r._v("Edgware（艾奇韦尔）")]),r._v(" "),t("td",[r._v("1.5.x")])]),r._v(" "),t("tr",[t("td",[r._v("Dalston（达尔斯顿）")]),r._v(" "),t("td",[r._v("1.5.x")])]),r._v(" "),t("tr",[t("td",[r._v("Camden（姆登）")]),r._v(" "),t("td",[r._v("1.4.x")])]),r._v(" "),t("tr",[t("td",[r._v("Brixton（布里克斯顿）")]),r._v(" "),t("td",[r._v("1.3.x")])]),r._v(" "),t("tr",[t("td",[r._v("Angel（安杰尔）")]),r._v(" "),t("td",[r._v("1.2.x")])])])]),r._v(" "),t("h3",{attrs:{id:"_2-spring-cloud-解决的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-spring-cloud-解决的问题","aria-hidden":"true"}},[r._v("#")]),r._v(" 2. Spring Cloud 解决的问题")]),r._v(" "),t("p",[r._v("答：微服务")]),r._v(" "),t("h3",{attrs:{id:"_3-服务注册与发现是干什么的（eureka、consul、zookeeper）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务注册与发现是干什么的（eureka、consul、zookeeper）","aria-hidden":"true"}},[r._v("#")]),r._v(" 3. 服务注册与发现是干什么的（Eureka、Consul、Zookeeper）")]),r._v(" "),t("p",[r._v("答：解决硬编码服务提供者的问题")]),r._v(" "),t("h3",{attrs:{id:"_4-负载均衡是干什么的（ribbon）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-负载均衡是干什么的（ribbon）","aria-hidden":"true"}},[r._v("#")]),r._v(" 4. 负载均衡是干什么的（Ribbon）")]),r._v(" "),t("p",[r._v("答：字面意思")]),r._v(" "),t("h3",{attrs:{id:"_5-网关是干什么的（spring-cloud-gateway、zuul）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-网关是干什么的（spring-cloud-gateway、zuul）","aria-hidden":"true"}},[r._v("#")]),r._v(" 5. 网关是干什么的（Spring Cloud Gateway、Zuul）")]),r._v(" "),t("p",[r._v("答：网关是介于客户端和服务器端的中间层，所有的外部请求都先经过微服务网关。避免客户端多次请求不同的微服务，增加复杂性、认证难度等")]),r._v(" "),t("h3",{attrs:{id:"_6-配置中心是干什么的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-配置中心是干什么的","aria-hidden":"true"}},[r._v("#")]),r._v(" 6. 配置中心是干什么的")]),r._v(" "),t("p",[r._v("答：集中配置管理、动态调整、配置修改自动刷新等")]),r._v(" "),t("h3",{attrs:{id:"_7-分布式缓存、分布式锁、分布式-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-分布式缓存、分布式锁、分布式-session","aria-hidden":"true"}},[r._v("#")]),r._v(" 7. 分布式缓存、分布式锁、分布式 Session")]),r._v(" "),t("p",[r._v("答：通过分布式缓存实现分布式锁和分布式 Session")]),r._v(" "),t("h3",{attrs:{id:"_8-消息中间件（mq）、分布式事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-消息中间件（mq）、分布式事务","aria-hidden":"true"}},[r._v("#")]),r._v(" 8. 消息中间件（MQ）、分布式事务")]),r._v(" "),t("p",[r._v("答：微服务数据一致性")]),r._v(" "),t("h3",{attrs:{id:"_9-docker-容器编排"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-docker-容器编排","aria-hidden":"true"}},[r._v("#")]),r._v(" 9. Docker 容器编排")]),r._v(" "),t("p",[r._v("答：自动扩容")]),r._v(" "),t("h3",{attrs:{id:"补充-spring-cloud-alibaba"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充-spring-cloud-alibaba","aria-hidden":"true"}},[r._v("#")]),r._v(" 补充: Spring Cloud Alibaba")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md",target:"_blank",rel:"noopener noreferrer"}},[r._v("https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md"),t("OutboundLink")],1)]),r._v(" "),t("ul",[t("li",[r._v("Sentinel: 把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。")]),r._v(" "),t("li",[r._v("Nacos: 一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。")]),r._v(" "),t("li",[r._v("RocketMQ: 一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。")]),r._v(" "),t("li",[r._v("Dubbo: Apache Dubbo™ 是一款高性能 Java RPC 框架。")]),r._v(" "),t("li",[r._v("Seata: 阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。")])])])},[],!1,null,null,null);a.default=s.exports}}]);