(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{693:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"附录-c：fp-库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录-c：fp-库","aria-hidden":"true"}},[t._v("#")]),t._v(" 附录 C：FP 库")]),t._v(" "),a("p",[t._v("如果你从头到尾地读了这本书，那么停下一会，回顾一下从"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch1.html"}},[t._v("第一章")]),t._v("开始你走了多远。这真是一次漫长的旅行。我希望你学到了许多，并对如何对自己的程序进行函数式的思考有了一些心得。")],1),t._v(" "),a("p",[t._v("我想在结束这本书之前给你留一些如何使用常见/流行的 FP 库的快速指引。这可不是它们其中每一个的完整文档，而是简要提及一下在你超越 “轻量函数式” 到更广阔的 FP 世界中冒险时应当注意的事情。")]),t._v(" "),a("p",[t._v("无论何处，我建议你 "),a("em",[t._v("不要")]),t._v(" 重新发明任何轮子。如果你找到一个适合你的需要的 FP 库，那么就使用它。仅在你无法为自己的情景找到合适的库方法时才来使用这本书中的 —— 或者发明你自己的！—— 特殊帮助工具。")]),t._v(" "),a("h2",{attrs:{id:"调研对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调研对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 调研对象")]),t._v(" "),a("p",[t._v("让我们展开"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch1.md/#libraries"}},[t._v("第一章中的需要注意的 FP 库列表")]),t._v("。我们不会讲解所有这些（因为它们有许多重叠的东西），但它们都是应当出现在你视野中的东西：")],1),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://ramdajs.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ramda"),a("OutboundLink")],1),t._v("：常规 FP 工具")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sanctuary-js/sanctuary",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sanctuary"),a("OutboundLink")],1),t._v("：Ramda 的 FP 类型伴侣")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/lodash/lodash/wiki/FP-Guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("lodash/fp"),a("OutboundLink")],1),t._v("：常规 FP 工具")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://functionaljs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("functional.js"),a("OutboundLink")],1),t._v("：常规 FP 工具")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/facebook/immutable-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immutable"),a("OutboundLink")],1),t._v("：不可变数据结构")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/swannodette/mori",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mori"),a("OutboundLink")],1),t._v("：（受 ClojureScript 启发的）不可变数据结构")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/rtfeldman/seamless-immutable",target:"_blank",rel:"noopener noreferrer"}},[t._v("Seamless-Immutable"),a("OutboundLink")],1),t._v("：不可变数据帮助工具")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/cognitect-labs/transducers-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("transducers-js"),a("OutboundLink")],1),t._v("： Transducers")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/monet/monet.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("monet.js"),a("OutboundLink")],1),t._v("：单子类型")])]),t._v(" "),a("p",[t._v("还有几十种其他优秀的库没有罗列在这里。不在我的列表中不意味着它不好，这个列表也不是一种特殊的担保。它只是对 JavaScript 中 FP 风景的一瞥。一个长得多的 FP 资源列表可以在"),a("a",{attrs:{href:"https://github.com/stoeffel/awesome-fp-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里找到"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("一个对于 FP 世界来说极其重要的资源是 —— 它不是一个库而更像一部百科全书！—— "),a("a",{attrs:{href:"https://github.com/fantasyland/fantasy-land",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fantasy Land"),a("OutboundLink")],1),t._v("（也成为 FL）。")]),t._v(" "),a("p",[t._v("这绝对不是为胆小鬼准备的轻量阅读。它是一切 FP 被翻译为 JavaScript 时的完整详细的路线图。为了确保最大的互换性，FL 实质上已经成为了 JavaScript FP 库遵循的标准。")]),t._v(" "),a("p",[t._v("Fantasy Land 正是 “轻量函数式” 的反面。它是在 JavaScript 中无限接近 FP。也就是说，在你超越这本书继续自己的冒险时，FL 很可能会出现在你的旅途中。我建议你把它加入收藏夹，而且当你在现实世界中将这本书中的概念实践了最少六个月以后再回头来看它。")]),t._v(" "),a("h2",{attrs:{id:"ramda-0-23-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ramda-0-23-0","aria-hidden":"true"}},[t._v("#")]),t._v(" Ramda (0.23.0)")]),t._v(" "),a("p",[t._v("源自 "),a("a",{attrs:{href:"http://ramdajs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ramda 文档"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("blockquote",[a("p",[t._v("Ramda 的函数都是自动被柯里化的。")]),t._v(" "),a("p",[t._v("Ramda 函数的形式参数被安排为便于柯里化。需要被操作的数据一般都在最后被提供。")])]),t._v(" "),a("p",[t._v("我觉得这种设计决策是 Ramda 的优势之一。另外需要注意的是，Ramda 的柯里化形式是（而且看起来大多数库都是）"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch3.md/#user-content-loosecurry"}},[t._v("我们在第三章中谈到的 “宽松柯里化”")]),t._v("。")],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch3.md/#user-content-finalshortlong"}},[t._v("第三章中的最后一个例子")]),t._v(" —— 定义一个无点的 "),a("code",[t._v("printIf(..)")]),t._v(" 工具 —— 可以使用 Ramda 这样完成：")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" msg "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isShortEnough")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" isLongEnough "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("complement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" isShortEnough "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" printIf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("partial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("when "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" msg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" msg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printIf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" isShortEnough"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printIf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" isShortEnough"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printIf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" isLongEnough"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printIf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" isLongEnough"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello World")]),t._v("\n")])])]),a("p",[t._v("与"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch3.md/#user-content-finalshortlong"}},[t._v("第三章的方式")]),t._v("相比，有几个需要指出的不同：")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("我们使用 "),a("code",[t._v("R.complement(..)")]),t._v(" 取代 "),a("code",[t._v("not(..)")]),t._v(" 来在 "),a("code",[t._v("isShortEnough(..)")]),t._v(" 外层创建一个否定函数 "),a("code",[t._v("isLongEnough(..)")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("我们使用 "),a("code",[t._v("R.flip(..)")]),t._v(" 取代 "),a("code",[t._v("reverseArgs(..)")]),t._v("。要注意的是 "),a("code",[t._v("R.flip(..)")]),t._v(" 仅仅调换前两个参数，而 "),a("code",[t._v("reverseArgs(..)")]),t._v(" 会翻转所有的。在这种情况下，"),a("code",[t._v("flip(..)")]),t._v(" 对我们来说更方便，所以我们不需要做 "),a("code",[t._v("partialRight(..)")]),t._v(" 或任何同种类的调整。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("R.partial(..)")]),t._v(" 将所有后续（函数之后的）参数接收为一个数组。")])]),t._v(" "),a("li",[a("p",[t._v("因为 Ramda 使用宽松柯里化，我们不必使用 "),a("code",[t._v("R.uncurryN(..)")]),t._v(" 来得到一个同时接收两个参数的 "),a("code",[t._v("printIf(..)")]),t._v("。如果我们这么做，它看起来会像是 "),a("code",[t._v("R.uncurryN( 2, .. )")]),t._v(" 包裹着 "),a("code",[t._v("R.partial(..)")]),t._v(" 调用；但这是不必要的。")])])]),t._v(" "),a("p",[t._v("Ramda 是一个非常流行且强大的库。如果你想练习将 FP 引入你的代码库，它将是一个非常好的起点。")]),t._v(" "),a("h2",{attrs:{id:"lodash-fp-4-17-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lodash-fp-4-17-4","aria-hidden":"true"}},[t._v("#")]),t._v(" Lodash/fp (4.17.4)")]),t._v(" "),a("p",[t._v("Lodash 是在整个 JS 生态中最受欢迎的库之一。他们发布了一个 “FP 友好” 版本的 API，称为 "),a("a",{attrs:{href:"https://github.com/lodash/lodash/wiki/FP-Guide",target:"_blank",rel:"noopener noreferrer"}},[t._v('"lodash/fp"'),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("在"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch9.md/#composing-standalone-utilities"}},[t._v("第九章中，我们看到了组合独立列表操作")]),t._v(" （"),a("code",[t._v("map(..)")]),t._v("、"),a("code",[t._v("filter(..)")]),t._v("、和 "),a("code",[t._v("reduce(..)")]),t._v("）。这是我们如何使用 “lodash/fp” 来完成相同的任务：")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("isOdd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nfp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    fp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" double "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" isOdd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\n")])])]),a("p",[t._v("与人们更熟悉的 "),a("code",[t._v("_.")]),t._v(' 名称空间前缀不同，"lodash/fp" 将 '),a("code",[t._v("fp.")]),t._v(" 作为名称空间前缀来定义它的方法。我觉得这种区分很有帮助，而且与 "),a("code",[t._v("_.")]),t._v(" 比起来通常更易于我的眼睛分辨！")]),t._v(" "),a("p",[t._v("注意，"),a("code",[t._v("fp.compose(..)")]),t._v("（在 lodash 中也被称为 "),a("code",[t._v("_.flowRight(..)")]),t._v("）接收一个函数的数组，而不是独立的参数。")]),t._v(" "),a("p",[t._v("你无法击败 lodash 的稳定性，广泛的社区支持，以及性能。它是你 FP 探索旅途中最可靠的赌注。")]),t._v(" "),a("h2",{attrs:{id:"mori-0-3-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mori-0-3-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Mori (0.3.2)")]),t._v(" "),a("p",[t._v("在"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch6.html"}},[t._v("第六章")]),t._v("中，我们已经简要地看过了 Immutable.js 库，对于不可变数据结构来说，它可能是最广为人知的。")],1),t._v(" "),a("p",[t._v("让我们看看另一个很流行的库："),a("a",{attrs:{href:"https://github.com/swannodette/mori",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mori"),a("OutboundLink")],1),t._v("。Mori 被设计为呈现一种不同的（表面上更像 FP 的） API：它使用独立函数，而不是直接在值上使用方法。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assoc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    mori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("into")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"meaning of life"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" newState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\nmori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\nmori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\nmori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" newState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\nmori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" newState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "meaning of life"')]),t._v("\n\nmori"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" newState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [2,3]")]),t._v("\n")])])]),a("p",[t._v("在这个例子中，需要指出一些关于 Mori 的有趣的事情：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("我们使用了一个 "),a("code",[t._v("vector")]),t._v(" 而不是一个（人们可能假设的）"),a("code",[t._v("list")]),t._v("，这主要是因为文档上说它的行为要比我们所期待的更像一个 JS 数组。")])]),t._v(" "),a("li",[a("p",[t._v("我们不能像对 JS 数组那样随机地设置一个超出向量末尾的位置；那样会抛出一个异常。所以我们不得不首先使用 "),a("code",[t._v("mori.into(..)")]),t._v(" 和一个拥有恰当多值槽的数组来 “增长” 这个向量。一旦我们获得一个拥有 43（4 + 39）个值槽的向量，我们就可以使用 "),a("code",[t._v("mori.assoc(..)")]),t._v(" 方法将它最后的值槽（位置 "),a("code",[t._v("42")]),t._v("）设置为值 "),a("code",[t._v('"meaning of life"')]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("使用 "),a("code",[t._v("mori.into(..)")]),t._v(" 来创建一个大向量的中间步骤，以及之后使用 "),a("code",[t._v("mori.assoc(..)")]),t._v(" 从中创建另一个向量可能看起来很低效。但是不可变数据结构的优美之处就在于这里没有发生克隆。每次发生一个 “改变” 时，新的数据结构就会追踪与之前状态的区别。")])])]),t._v(" "),a("p",[t._v("Mori 是很大程度上受到 ClojureScript 的启发的。如果你有这种语言的经验（或者正在使用！），那么对你来说它的 API 就非常令人熟悉。因为我没有这种经验，所以我觉得方法的名称要熟悉起来有点儿奇怪。")]),t._v(" "),a("p",[t._v("但是与值上面的方法相比，我很喜欢这种独立函数的设计。Mori 还有一些自动返回常规 JS 数组的函数，这非常方便。")]),t._v(" "),a("h2",{attrs:{id:"福利：fpo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#福利：fpo","aria-hidden":"true"}},[t._v("#")]),t._v(" 福利：FPO")]),t._v(" "),a("p",[t._v("在"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch2.md/#named-arguments"}},[t._v("第二章中我们介绍了一种模式")]),t._v("，用来处理称为 “命名实际参数” 的参数，在 JS 中这意味着在调用点使用一个对象将属性映射到被解构的函数形式参数上：")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined 3")]),t._v("\n")])])]),a("p",[t._v("然后在"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch3.md/#order-matters"}},[t._v("第三章中，我们谈到了将我们的想法扩展")]),t._v("至柯里化和局部应用，以使它们能够利用命名实际参数，就像这样：")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("x:")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" y:")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" z:")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curryProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这种风格的一个主要的好处是能够以任意顺序传递参数（即使是对柯里化和局部应用！），不必使用 "),a("code",[t._v("reverseArgs(..)")]),t._v(" 来搬弄形式参数。另一个好处是可以通过不指定来省略一个可选的参数，而不必传递一个难看的占位符。")]),t._v(" "),a("p",[t._v("在我学习 FP 的旅程中，用位置指定参数的传统函数总是用这两件恼人之事把我弄得沮丧不堪；因此我真的非常感激命名实际参数风格解决了这些问题。")]),t._v(" "),a("p",[t._v("一天，我正在沉思这种 FP 的编码风格，想知道如果有一个库，它所有的 API 方法都用这种方式暴露出来会是什么样子。我开始试验，将这些试验给一些 FP 的朋友们看，并得到了一些正面的反馈。")]),t._v(" "),a("p",[t._v("从这些实验中，最终诞生了 "),a("a",{attrs:{href:"https://github.com/getify/fpo",target:"_blank",rel:"noopener noreferrer"}},[t._v("FPO"),a("OutboundLink")],1),t._v(" （发音为：“eff-poh”）库；FPO 代表 FP-with-Objects，如果你想知道的话。")]),t._v(" "),a("p",[t._v("摘自文档：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ramda 的 `reduce(..)`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("acc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" acc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 19")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FPO 命名实际参数方法风格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FPO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("acc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" acc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 19")]),t._v("\n")])])]),a("p",[t._v("在传统库（比如 Ramda）的 "),a("code",[t._v("reduce(..)")]),t._v(" 实现中，初始值的形式参数位于中间，而且不是可选的。FPO 的 "),a("code",[t._v("reduce(..)")]),t._v(" 方法可以以任意顺序接收参数，而且如果你乐意的话可以省略可选的初始值。")]),t._v(" "),a("p",[t._v("和其他大多数 FP 库一样，FPO 的 API 方法是自动宽松柯里化的，所以你不仅可以用任意的顺序提供参数，而且还可以通过多个调用为它提供参数来特化函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FPO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 稍后")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("acc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" acc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 19")]),t._v("\n")])])]),a("p",[t._v("最后，所有 FPO 的 API 方法还在 "),a("code",[t._v("FPO.std.*")]),t._v(" 名称空间下，通过传统的用位置指定参数的风格暴露出来 —— 你会发现它们与 Ramda 和其他库都很相似：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FPO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("acc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" acc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 19")]),t._v("\n")])])]),a("p",[t._v("如果 FPO 的命名实际参数形式 FP 很吸引你，也许你可以看看这个库并得出自己的想法。它有一组完整的测试套件，以及你所期望的大多数主要 FP 功能，包括我们在这本书中所讲解的、帮助你入门轻量函数式 JavaScript 的一切！")]),t._v(" "),a("h2",{attrs:{id:"福利-2：fasy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#福利-2：fasy","aria-hidden":"true"}},[t._v("#")]),t._v(" 福利 #2：fasy")]),t._v(" "),a("p",[t._v("FP 迭代（"),a("code",[t._v("map(..)")]),t._v(", "),a("code",[t._v("filter(..)")]),t._v(" 等等）几乎总是被模型化为同步操作，这意味着我们立即急切地运行迭代中所有的步骤。事实上，其他的 FP 模式，比如组合甚至 transducing 也是迭代，而且也都正是用这种方式模型化的。")]),t._v(" "),a("p",[t._v("但如果一次迭代步骤中的一步或几步需要异步地完成呢？你可能会认为 Observable（见"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch10.md/#observables"}},[t._v("第十章")]),t._v("）是自然的答案，但它们不是我们需要的。")],1),t._v(" "),a("p",[t._v("让我快速展示一下。")]),t._v(" "),a("p",[t._v("想象你有一个 URL 的列表，表示你想要加载到网页上的图片。很明显，图片的取得是异步的。所以，这工作起来不会和你希望的十分相像：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" imageURLs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://some.tld/image1.png"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://other.tld/image2.png"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://various.tld/image3.png"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" images "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" imageURLs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" fetchImage "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("images")]),t._v(" 数组不会包含图片。根据 "),a("code",[t._v("fetchImage(..)")]),t._v(" 的行为，它可能返回一个 promise，在图片完成下载后提供一个图片对象。所以 "),a("code",[t._v("image")]),t._v(" 将会成为一个 promise 的列表。")]),t._v(" "),a("p",[t._v("当然，你可以之后使用 "),a("code",[t._v("Promise.all(..)")]),t._v(" 等待所有这些 promise 解析，然后在它完成时展开一个图片对象的数组：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" images "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allImages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("imgObjs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("不幸的是，这个 “技巧” 仅在你并发地（不是一个接一个串行地）执行所有异步步骤，而且仅在操作是一个像上面展示的 "),a("code",[t._v("map(..)")]),t._v(" 时可以工作。如果想要串行异步，或者例如你想要并发地执行 "),a("code",[t._v("filter(..)")]),t._v("，这就不能工作；这是可能的，但是更混乱。")]),t._v(" "),a("p",[t._v("而且一些操作天然地要求串行异步，例如一个异步 "),a("code",[t._v("reduce(..)")]),t._v("，它显然需要从左至有一个一个地处理；这些步骤无法并发地运行，那样也不会有任何意义。")]),t._v(" "),a("p",[t._v("就像我说的，Observable（见"),a("router-link",{attrs:{to:"/module_book/JS/Functional-Light-JS-zh/ch10.md/#observables"}},[t._v("第十章")]),t._v("）不是这些问题的答案。究其原因，一个 Observable 协调的是对分离操作间的异步，而非一个单独操作中的步骤/迭代之间的异步。")],1),t._v(" "),a("p",[t._v("另一种将这种区别可视化的方式是，Observable 支持 “纵向异步”，而我想说的是 “水平异步”。")]),t._v(" "),a("p",[t._v("考虑如下代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obsv "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobsv\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <-- 纵向异步")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {after 100 ms}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11")]),t._v("\n")])])]),a("p",[t._v("如果为了某些原因我想要在 "),a("code",[t._v("1")]),t._v(" 被第一个 "),a("code",[t._v("map(..)")]),t._v(" 处理的时间点和 "),a("code",[t._v("2")]),t._v(" 被处理的时间点之间确保一个 100 毫秒的延迟，那么这就是我所指的 “水平异步”。确实没有一种干净的方法模型化这种东西。")]),t._v(" "),a("p",[t._v("当然，我在这个描述中使用的是一个很随意的 delay，但在实践中更可能是一个类似异步递减的串行异步，在它的异步递减中的每一个步骤都可能花一些时间才能完成，之后才能让下一个步骤被处理。")]),t._v(" "),a("p",[t._v("那么，我们如何才能在异步操作上支持串行和并发迭代呢？")]),t._v(" "),a("p",[a("strong",[t._v("fasy")]),t._v("（读音像 “Tracy” 但以 “f” 开头）正是我为这类问题建造的一个小型工具库。你可以在"),a("a",{attrs:{href:"https://github.com/getify/fasy",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("找到关于它的更多信息。")]),t._v(" "),a("p",[t._v("为了展示一下 "),a("strong",[t._v("fasy")]),t._v("，让我们考虑一个并发 "),a("code",[t._v("map(..)")]),t._v(" 和一个串行 "),a("code",[t._v("map(..)")]),t._v(" 的对比：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" fetchImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" imageURLs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allImages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("imgObjs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" fetchImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" imageURLs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allImages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("imgObjs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在这两种情况下，"),a("code",[t._v("then(..)")]),t._v(" 处理器都将仅在所有下载完全完成之后被调用一次。区别是下载是否将同时并发地（也就是 “并行”）被发起还是一次一个地进行。")]),t._v(" "),a("p",[t._v("你的直觉可告诉你并发总是好一些，虽然这常常是对的，但却不总是这样。")]),t._v(" "),a("p",[t._v("例如，如果 "),a("code",[t._v("fetchImage(..)")]),t._v(" 维护着下载好的图片的缓存，在实际发起网络请求之前检查这个缓存呢？另外，如果 "),a("code",[t._v("imageURLs")]),t._v(" 列表在其中存在重复呢？你当然会希望一个图片 URL 的下载首先完成（并填充缓存），然后再在这个列表中检查重复的图片 URL。")]),t._v(" "),a("p",[t._v("同样，将会不可避免地存在要求并发或串行异步的情况。异步递减将总是串行的，而异步映射可能更趋于并发但在某些情况下也需要是串行的。这就是为什么 "),a("strong",[t._v("fasy")]),t._v(" 支持所有这些操作。")]),t._v(" "),a("p",[t._v("与 Observable 一起，"),a("strong",[t._v("fasy")]),t._v(" 将帮助你为你的异步操作扩展出更多 FP 模式和原理。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("JavaScript 没有被特意设计为一种 FP 语言。然而，它确实拥有让我们使它变为 FP 友好的基础（比如函数值，闭包，等等）。我们在这里检视的库将帮助你做到这一点。")]),t._v(" "),a("p",[t._v("武装着这本书中的概念，你已经准备好了对付现实世界的代码。找一个优秀、舒适的 FP 库扎进去。练习、练习、练习！")]),t._v(" "),a("p",[t._v("那么…… 就是这样。我已经分享了目前我为你准备的一切。我特此正式授予你 “轻量函数式 JavaScript” 程序员的称号！在我们一起学习 FP 的故事中，这一 “章” 就要结束了。但是我的旅途仍在继续；我希望你的也是！")])])},[],!1,null,null,null);s.default=e.exports}}]);